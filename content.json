{"posts":[{"title":"穿越机相关站点导航","text":"搓飞机需要用到的各网站合集 软件 ExpressLRS官网 OpenTX官网 EdgeTX官网 Betaflight新版wiki文档, Betaflight wiki中文站 穿越机品牌 BetaFPV官网 翼飞iFlight官网 GEPRC官网 SpeedyBee官网 化骨龙官网 FOXEER官网 DIATONE大通官网 银燕EMAX官网 酷飞官网 配件品牌无刷电机 致盈动力官网 T-motor官网 朗宇官网 图传 熊猫图传官网 蜗牛CaddxFPV官网 眼镜 skyzone官网 遥控 RadioMaster官网 飞控 津航JHEMCU官网 FPV社区 FPV帮主页 厂商社群及售后信息 FPV ONE 一起FPV主页 打印件资源 Thingiverse (开源免费，强推) Printables (开源免费) Cults （资源不错但付费） 其它资源 manualslib (文档集合) CNCdrones （机架图纸）","link":"/2024/01/15/%5BFPV%5D%E7%BD%91%E7%AB%99%E5%AF%BC%E8%88%AA/"},{"title":"一些基本的hexo指令","text":"初笔记，记录常用的hexo指令 一些基本的hexo指令在Hexo框架的博客网站中，博客页面的生成和发布主要通过Hexo指令进行，以下是对Hexo指令的整理。整理分为两部分，第一部分为最常用和简单的，第二部分为稍进阶复杂的。 Part 1 最常用最简单的假定此时已经写好了一篇新的博客，当然是markdown文件，位置在 blog\\source\\_posts这个文件夹里。在网站建立的路径下，打开终端。 Step 1 clean$ hexo clean 这个属于有点玄学的操作，类似于刷新一下 Step 2 generate$ hexo g 生成静态文件 (Step 3 server)$ hexo s 启动服务器。可以在浏览器地址栏输入http://localhost:4000打开网站，可在本地预览网站，检查网站的样式和功能。 Step 4 deploy$ hexo d 将网站部署到远端 Part 2 稍进阶命令一条命令生成+部署$ hexo g -d References Hexo官方文档","link":"/2023/12/28/%5BCS%5D%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%9A%84Hexo%E6%8C%87%E4%BB%A4/"},{"title":"使用vercel一分钟部署静态网页","text":"最近有一个简单的Web应用需要上线，尝试使用vercel。神仙网站www 进入vercel官网 登陆后自动进入dashboard import 我们要部署的静态网页项目（需要是公有项目，如果还没有显示就点击 Adjust Github APP Permissions） 点击Deploy，很快，我的小项目不到10s就好了 显示比例有点奇怪，不知道为什么 点击预览图片即可进入网站。回到dashboard可以查看网址，可以添加其他域名","link":"/2024/03/28/%E4%BD%BF%E7%94%A8vercel%E4%B8%80%E5%88%86%E9%92%9F%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/"},{"title":"古月居《ROS入门21讲》零基础学习笔记","text":"前言 ”怕什么真理无穷，进一寸有一寸的欢喜。” ——古月 适 本人大一小白一枚，暂无编程基础，参加了一个本科生科研项目，目前正在学习一些ROS1相关的一些前置基础知识。在这里以博客的形式记录一下学习的过程、操作的细节及操作的结果、爬坑方法、听课笔记。希望能给同样在学习相关知识的小伙伴一些问题解决的参考以及学习之路的陪伴。我是基本按照导师推荐的B站上古月居的《ROS入门21讲》(ROS1)走的本博客也是按照课程学习顺序做的笔记 1.课程简介老师的课程使用的是Ubuntu18.04,ROS melodic我用的是Ubuntu20.04,ROS noetic由于都是ROS1,所以原理和操作相同 2.Linux系统介绍及安装先下载VMware，普通版本就行，专业版需找激活码（可tb）然后建议上某宝安装想要的ubuntu和ros版本（推荐 大熊一加一）此处含泪删除上千字搞机记录 3.Linux基础操作（操作集）命令结构命令 选项 参数command option parameter之间都要加空格 常用命令 pwd查看终端所在路径(Print Working Directory） cd切换路径（注意斜杠前面有空格）(change directory) cd . .跳回到上级目录（cd和dot之间也要有空格） mkdir 在当前路径创建目录（make directory) ls 列出当前路径下面的所有文件夹 touch 创建新的文件（该文件相当于text记事本） mv 移动文件 (move)（在该文件所在目录的路径下执行此操作） cp 复制粘贴文件 (copy)（在该文件所在目录的路径下执行此操作）（cp 文件名 目标目录/重命名的新名称） rm 删除某个文件（remove） rm -r 删除一个文件夹（recursive递归）(要删除的文件夹后面加不加斜杠效果好像一样，不知道斜杠的使用逻辑） sudo 提升用户权限(super user do超级用户！）（这里以获取软件更新权限为例） “- - help “查看帮助 快捷操作 Tab快速补全。长长的文件名可以用Tab补全若文件名首字母有歧义，按两次，出选项 用方向上下键调出之前的命令不想找的时候按Ctrl+C，自己输命令 文件名前面加dot是隐藏文件 4.cpp&amp;python极简基础（操作集）简单对比 cpp适合底层硬件开发、框架开发 python适合应用层、算法的开发 不同场景选择不同语言 安装编译器 安装g++编译器 安装python编译器（点击方向上键重复前一步操作，g++改成python就行了）出了点问题在CSDN上找到解决方法，解决方式如下编译器安装完成老师简单讲了一下语言逻辑。并将使用一些源码做演示教学。我在他的微信公众号上进入了github文件地址并下载了源码。 但是没能够像老师一样简单地复制粘贴到虚拟机。最后呢，关掉虚拟机改了一个虚拟机设置，把硬件CD/DCD里面，使用ISO文件改成了使用物理驱动器自动检测。（不知道这一步有没有作用）后面还是拖不动下载的文件夹。但是大文件夹里面的linux文件夹可以拖进虚拟机。我试了一下另一个下面有子目录的文件夹，也是可以拖进去的。或许是因为大文件夹太大了？我不知道。拖到桌面，出现奇怪东东，不明白。（后来重启虚拟机之后消失了）啊这，我成功吧教学文件夹拖进虚拟机了。方法是什么呢？。。。把文件夹名字改短。。。我又把里面的文件夹拖到桌面，再把原空白目录删除。这一波下来和老师的直接拖动效果一样了，不失为一种办法。 编译和运行下面开始编译和运行cpp for 循环的文件。 g++ 文件名 -o 输出的可执行的文件的名字 g++ c++_for.cpp -o c++_for ./ 运行文件 ./c++_for python不用编译，直接用结果寄，SyntaxError: Missing parentheses in call to ‘print‘记得我之前安装python编译器的时候有过改动，大概偏差出在那里。于是我进python文件修改了一下语法（print改为print（）），与胡老师课件上有一点点不同，运行成功。再运行cpp while程序，连按多次方向上键，调出前前条命令。做了一件小事，在虚拟机上安装了IDE。关于我决定在虚拟机上学编程这件事，原因一是新鲜感多一些，二是有一位计算机大佬朋友就是这么做的。据说有一些指令会很方便。在虚拟机上安装IDE的时候，我在clion和VScode两者之间还纠结了一阵，最终选择了后者。一方面是之前使用了一段时间clion体验不佳，让我满意的只是图表和页面比较好看；另一方面是听说VS的功能比较强大，甚至可以和人工智能ChatGPT交流，爱了爱了。安装的过程和结果也很干净，期待接下来的学习。 5.安装ROS省流：上某宝 6.ROS是什么 通信机制+开发工具+应用功能+生态系统 提高机器人研发中的软件复用率学习过程中建议用谷歌搜索，搜到wiki的网站（ROSwiki是记录ROS信息文档的主要论坛） 7.ROS的核心概念节点与节点管理器节点（Node）— 执行单元 节点是具体的执行单元，执行具体任务的进程，独立运行的可执行文件 不同的节点可以使用不同的编程语言，可分布式运行在不同的主机 节点在系统中的名称必须是唯一的，重名ros系统会找不到 节点管理器（ROS Master) — 控制中心 节点的管理。命名、注册、建立通讯 提供参数服务器，节点使用此服务器存储和检索运行时的参数 话题通信（异步）话题 topic 分为发布者和订阅者 单向数据传输，从驱动端传到订阅段，发布者到订阅者 通道被定义为话题，时数据传输的总线 消息 message 具有一定的类型和数据结构（有ros提供的标准类型和用户自定义的类型 使用与编程语言无关的 .msg 文件定义类型和数据结构 服务通信（同步）服务 service 使用客户端/服务器（service/client) 模型，客户端发送请求数据，服务器完成处理后返回应答数据 使用与编程语言无关的, .srv 文件定义请求和应答的数据结构 一般是一次，发出一个配置指令，完成配置内容，返回一个反馈缓冲区是防止发布与订阅的速度不匹配服务是会有阻塞 参数 parameter 适合存储静态、非二进制的配置参数，不适合动态配置的数据 文件系统 功能包 package：ros软件的基本单元，包含源码、配置文件、数据定义 功能包清单 package manifest：记录功能包的基本信息，包含作者信息、许可信息等等信息 元功能包 meta packages：组织多个用于同一目的的功能包 8.ROS命令行工具的使用（操作集）（开始实操）键盘突然在虚拟机用不了了。有效解决方案 rosrun roscore启动ROS master(要首先运行的一个指令） rosrun来运行一个节点 （要呼出一个新终端） （加两个参数，功能包名 节点名） （输入功能包名后按tab可以显示功能包下有的节点）光标要再键盘控制节点的那个窗口才能控制 rqt_graph rqt_graph用来显示系统计算图的工具 （直观，可视化，了解系统全貌） （显示了节点和话题的信息） rosnode rosnode list （列出系统当中使用的节点） （rosout是ros默认的一个话题) rosnode info (查看某个节点的信息） (发布和订阅的信息） rosnode info /turtlesim rostopic 看到下面的cmd_vel就是刚才就是键盘控制节点和海龟仿真器节点通讯的话题学会使用tab, 这里输入消息类型的时候还要连按两次tab 用pub发布数据给某一个topic 后面跟话题名 再后面跟消息结构（类型） 再跟消息结构里的具体数据 rostopic pub /turtle1/cmd_vel geometry_msgs/Twist \"linear: x: 1.0 y: 0.0 z: 0.0 angular: x: 0.0 y: 0.0 z: 0.0\" 注意这里线速度的单位是米每秒，角速度单位弧度每秒）在调具体数据的时候，移动光标只可以用左右方向键（用上下是会调出历史命令）看到小海龟向左前方45度移动了一小段想让小海龟连续移动 -r 表示rate, 10表示10Hz rostopic pub -r 10 /turtle1/cmd_vel geometry_msgs/Twist \"linear: > x: 1.0 > y: 1.0 > z: 0.0 > angular: > x: 0.0 > y: 0.0 > z: 0.0\" 调angular的z调旋转看到方向和角速度都是可以调的圆圈的半径也符合速度和角速度的计算在前面加负号也有意义 rosmsg rosmsg show显示消息的数据结构这里吐槽一下，好像不方便改设备的名称改了之后节点之间的通讯会出现问题只好继续用ros-virtual-machine了。。 rosservice rosservice list (提供的所有服务） (服务端都是仿真器）（客户端是终端） rosservice call 召唤新海龟 rosservice call /spawn \"x: 2.0 y: 2.0 theta: 0.0 name: 'turtle2'\" 可以看到是有一个反馈的（反馈信息name: “turtle2”） 话题记录 rosbag record -a -O cmd_record （rosbag 记录 all -大写O保存成压缩包 压缩包的名字） 看到了订阅的话题随便让海龟动几下结束之后在终端ctrl+c默认保存到了主文件夹从回车之后就开始记录了，包括没有操作的等待时间 话题复现 rosbag play cmd_record.bag 9.创建工作空间与功能包概念 工作空间（workspace)是一个存放工程开发相关文件的文件夹。所有的源码、配置文件、可执行文件都是放置在里面的。主要分为四个文件夹： 1.src: 代码空间 (source space)放置功能包（里面的代码、配置文件、launch文件 2.build:编译空间 (build space)编译过程中的中间文件（不太用关心 3.devel:开发空间 (development space)编译生成的一些可执行文件、库、脚本 4.install:安装空间 (install space）install命令的结果就放在里面 放一张老师课件截图： 创建工作空间overview:operation: catkin_init_workspace //初始化工作空间（属性变化），看到冒出了CMakeLists.txt 下面对工程编译（catkin_make 要来到工作空间的根目录进行编译看到出现了另两个空间：使install空间出现： 创建功能包 功能包是放置ROS源码的最小单元 同一个工作空间下不允许存在同名功能包 创建功能包：（要放在src里面）： 命令 功能包名 依赖1 依赖2 依赖3： catkin_create_pkg test_pkg roscpp rospy std_msgs 打开功能包：include放置头文件src放代码后面两个文件是功能包一定有的，使其区别于普通文件夹的属性编译功能包还是先回到catkin_ws编译工作空间就行了因为没有代码所以也没有实际效果要运行功能包里某一个程序的话，要先设置一下工作空间的环境变量设置之后系统才能找到工作空间 设置环境变量： ros@ros-virtual-machine:~/catkin_ws$ source devel/setup.bash 检查环境变量 用echo命令把环境变量打开 （ROS_PACKAGE_PATH 是ROS本身的一个环境变量，通过这个环境变量查找所有功能包的路径） 也是只有在前一步设置了工作空间的setup.bash之后，path里面才会包含工作空间的路径 ros@ros-virtual-machine:~/catkin_ws$ echo $ROS_PACKAGE_PATH /home/ros/catkin_ws/src:/opt/ros/noetic/share 有点不懂了，贴一下chatGPT的解释小结： 创建工作空间 创建：新建工作空间文件夹，该文件夹下新建代码空间 cd到代码空间里去 用命令初始化工作空间 cd到工作空间里去 用命令编译工作空间 source设置环境变量 检查环境变量 创建功能包 cd进入工作空间下的代码空间 创建功能包，并配置依赖 cd到工作空间 编译工作空间 source设置环境变量 10. Publisher的编程实现 cd进入工作空间下的代码空间, 创建功能包，并配置依赖 在功能包里面的代码空间里编写C++代码文件 在cmakelist文件里面配置编译规则 cd到工作空间，编译工作空间，source设置环境变量 打开roscore, 运行海龟仿真节点，运行功能包里发布者的节点 11. Subscriber的编程实现 编写C++代码文件，配置编译规则 cd到工作空间，编译，设置环境变量 打开roscore, 运行海龟节点，运行功能包里面订阅者的节点 12. 话题消息的定义与使用 定义msg文件 在package.xml里面添加功能包依赖 在cmakelist.txt里面添加编译选项 编译生成语言相关文件 编写发布者 编写订阅者 在cmake文件里面配置编译规则: 1. 设置要编译的代码和生成的可执行文件 2. 设置链接库 3. 添加依赖项 cd到工作空间，编译，配置环境变量 打开roscore, 运行发布者节点和订阅者节点 13. client的编程实现 cd到代码空间，创建功能包 编写C++代码, 配置编译规则 cd到工作空间，编译，配置环境变量 打开roscore, 运行海龟仿真节点，运行客户端节点 14. server的编程实现 编写C++代码, 配置编译规则 cd到工作空间，编译，配置环境变量 打开roscore, 运行海龟仿真节点，运行服务端节点 $ rosservice call /turtle_command”{}” 发布消息 15. 服务数据的定义与使用 定义msg文件，添加功能包依赖，添加编译选项，编译生成相关文件 编写发布者, 编写订阅者 在cmake文件里面配置编译规则: 1. 设置要编译的代码和生成的可执行文件 2. 设置链接库 3. 添加依赖项 cd到工作空间，编译，配置环境变量 打开roscore, 运行服务端，运行客户端节点 16. 参数的使用与编程方法 cd到代码空间，创建功能包 编写C++代码, 配置编译规则 cd到工作空间，编译，配置环境变量 打开roscore, 运行海龟仿真节点，运行参数设置节点 17. ROS中的坐标系管理系统 $ sudo apt-getinstall ros-melodic-turtle-tf $ roslaunch turtle_tf turtletf demo.launch $ rosrun turtlesim turtle_teleop_key $ rosrun tf view_frames 18. tf坐标系广播与监听的编程实现 cd到代码空间，创建功能包 编写广播器和监听器的C++代码，配置编译规则 cd到工作空间，编译，配置环境变量 打开roscore 运行海龟仿真节点 运行turtle1和turtle2的广播器节点 运行监听器节点 运行键盘控制节点 19. launch 启动文件的使用方法 launch文件：通过xml文件实现多节点的配置和启动（可自动启动ros master) 在launch里面编写启动节点的语法和参数设置的语法 20. 常用可视化工具的使用Qt工具箱 提供了一系列可视化工具 Rviz 三维可视化工具 Gazebo一些琐碎信息的整理这周主要是复现的古月居老师课程里的代码实现环节 不求背住每一个细节和命令 需要达到的目标是当需要某个功能的时候能够想到在哪里，对着老师的课件实现自己想要的功能 文字识别软件 注意： 命令行和cmakelist里面的语句不要少了空格 注意第11节第6页有一个错误，rosrun里面应该是pose_publisher 三维物理仿真平台 使用老师教学包里python程序，要把python文件的第一行改成python3 运行python的时候记得改成python3的语法运行phthon文件的命令在11讲里有 有什么好说的呢，出错的地方跟着弹幕大佬改就好了这里可以调整文本格式，达到高亮效果","link":"/2022/12/20/%E5%8F%A4%E6%9C%88%E5%B1%85%E3%80%8AROS%E5%85%A5%E9%97%A821%E8%AE%B2%E3%80%8B%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"title":"在Clash for Windows中复制终端代理命令","text":"问题背景运行Python网页自动化脚本失败，在终端中向谷歌发送测试请求失败，原因应该是被墙了。虽然已经用clash开了代理但是没有用，需要在终端输入命令配置代理 点击Port里的终端小图标 点击Power Shell, 命令已经被复制到剪贴板了 回到PyCharm, 粘贴命令，回车运行 出来一堆HTML, 成功 Some Notescurl 是一个常用的命令行工具，用于传输数据。这条命令是在使用 PowerShell 的 curl 别名来发送一个 HTTP GET 请求到 http://www.google.com。 命令执行的结果显示了对 Google 首页的请求响应。状态码 200 表示请求成功，StatusDescription 显示为 OK，也表明了请求成功。Content 部分显示了返回的 HTML 内容，这是网页的结构和内容。RawContent 包含了 HTTP 响应的头部和正文。Forms、Headers、Images、InputFields 和 Links 是解析后的 HTML 元素，它们分别代表了表单、头部信息、图片、输入字段和链接。 这个命令在多种情况下都可能会用到，例如： 网页抓取：当你需要从网页上抓取数据时，可以使用这个命令来获取页面内容。 API 测试：如果你在测试一个 HTTP API，你可以使用这个命令来发送请求并查看响应。 自动化脚本：在自动化脚本中，需要获取外部数据或与其他服务交互，这时可以使用这个命令。 这样的命令可以帮助我们快速地从命令行界面与 Web 服务进行交互。","link":"/2024/01/13/%E5%9C%A8Clash%20for%20Windows%E4%B8%AD%E5%A4%8D%E5%88%B6%E7%BB%88%E7%AB%AF%E4%BB%A3%E7%90%86%E5%91%BD%E4%BB%A4/"},{"title":"通过Clash for windows的allow LAN帮助手机翻墙","text":"本博客介绍Clash for windows的allow LAN的帮助移动设备翻墙的功能 电脑端操作打开 Allow LAN 这里是7890 查看本机IP win+R 这里找到无线局域网适配器 WLAN 的IPv4地址 手机端操作 点击配置代理 上个油管儿测试","link":"/2024/02/06/%E9%80%9A%E8%BF%87Clash%20for%20windows%E7%9A%84allow%20LAN%E5%B8%AE%E5%8A%A9%E6%89%8B%E6%9C%BA%E7%BF%BB%E5%A2%99/"},{"title":"EdgeTX系统基础（含inav脚本刷写）","text":"本博客是对EdgeTX系统基础操作的一个整理记录，基于RadioMaster Pocket，黑白屏幕 主要按照遥控器拿到手的一系列配置顺序撰写 点击进入官方文档 系统设置校准摇杆 SYS （按动SYS系统按键） PGDW -&gt; 6 （点击PAGE&gt;至第六页） Calibration （按动滚轮确认）（UI显示按动ENTER的地方即是按动滚轮） 根据提示完成校准，打杆要拉满行程 RTN （按动RTN返回按键） ELRS设置进入 SYS ExpressLRS ENTER， 进入ELRS的LUA脚本文件 等待刷新完成 调整基础参数 Packet Rate 刷新率（包转发速率） 250Hz差不多 Telem Ratio 回传比例 比例越低，遥测频率和遥测数据流越大（比值的基准是打包速率，如1：2就是每打两个包等一个回传数据） Switch Mode 选择的是辅助通道打包策略 这里选Hybrid 参考ELRS文档 TX Power 发射功率 不用有功率焦虑，室内25mw，户外100mw够了，也可开满内置的250mw（非远航） 更多功能 Model Match 我也没有很多飞机在飞。Off关掉就好 VTX Administration 直接在遥控器里更改图传选项 须在Betaflight里的VTX table做相关配置 Band 频点设置 Channel 通道选择 Power level 功率选择 点击 Send 发送文件进行配置 WiFi Connectivity 高频头wifi的打开 可以电脑或手机连接wifi打开ELRS网页端地面站（修改对频密码等） 也可以打开接收机的wifi backpack不怎么用，不管 BLE Joystick 蓝牙连接电脑（用来玩模拟器等） Bind 对频配对 飞机通电三次保持，点击bind对频（未设置对频密码） PAGE 3 RADIO SETUP 设置日期、时间、声音等 选择AETR1234的经典通道设置 选择Mode2 美国手 模型设置PAGE 1 MODELSEL选择模型 PAGE 2 SETUP要在这里打开内置高频头，看到红灯亮起即打开（针对RM Pocket） PAGE 6 MIXES混控输出 前四个通道就是四个遥感 新建的模型CH5及往后都是空的，需要手动映射。配置即将遥控器上的按键和CH5,CH6等对应起来 选中某一个通道，点击Edit进行配置。其实主要把Source配置好就行，名字也可以简单命名一下 遥控里将按键与通道对应，飞控再将通道与功能对应，即可实现使用遥控器按键、开关、拨轮等控制飞机功能 inav脚本文件设置 仓库地址：https://github.com/iNavFlight/OpenTX-Telemetry-Widget 下拉，在Setup里点击 Download latest release 把这两个子文件夹之间拷贝到遥控器的SD卡里，同名文件夹替换即可","link":"/2024/02/13/EdgeTX%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%EF%BC%88%E5%90%ABinav%E8%84%9A%E6%9C%AC%E5%88%B7%E5%86%99%EF%BC%89/"},{"title":"Stable_Diffrsion搭建教程","text":"详细的SD安装、配置、生成图片教程 网址导航 C站 安装 Web UI首先克隆仓库stable-diffusion-webui 开始Downloading一堆东西 下载至少一个模型上 Hugging Face, 进入 模型下载页面 下载这个模型 输入 a cat， 点击 generate 芜湖 起手改装主要文件夹介绍： embeddings 存放pt,safetensors等文件 extensions 存放插件 models lora lora插件 Stable-diffusion 大模型 VAE 调试预设 aww整理笔记的时候忘记装了哪些插件了。总之现在是这个亚子： 在C站上可以下载插件","link":"/2023/09/28/Stable_Diffrsion%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"},{"title":"3D打印和激光切割保姆级教程","text":"本教程在黎明杯培训期间编写，帮助参赛队员们使用3D打印和激光切割加工自己的零件。也欢迎分享给其它同学。 面向小白的上手教程，需要进阶技巧的同学请查阅相关资料。 送加工之前需要设计建模。本教程中建模软件都为SolidWorks。 3D打印教学 生成STL文件 选择STL格式 进入个人中心 填好保存 上传并打印 选择并打开要打印的零件的STL文件 填写自己的学院班级，指导老师填哪位都影响不大 打印用途简单填写即可，在这里可以备注想要的材料颜色和打印密度需求 例如黎明杯机械赛 颜色最好黑色 填充密度85% 辛苦助管力 点击提交订单 线下取件在3D打印中心，地点在学创C楼，进门右转C101。建议晚上十点之前去取。 龙宾楼3D打印机打印安装FlashPrint软件首先进入官网下载中心 windows可以以管理员身份运行，安装成功率会高一些 界面如图 基础设置 选择喷嘴尺寸，唐创打印机选 0.4 mm 导入STL文件并调整 选择要打印的STL并打开 例如旋转，可以左键点住环进行三个自由度上的旋转 可以每90度进行翻转 可以按面放平（勾选之后点击要放到底面的面） 切片并保存 喷嘴尺寸选择PLA，切片配置可选 对3D打印了解比较多的同学可以进入专家模式进行打印设置 可以修改填充密度，改到85%就算很大了，不需要100%。 调整完毕后点击切片。 丢进打印机打印打印机如果没有开，可以自己打开。船型开关在打印机的背面。打印机的触摸屏的UI还是比较符合直觉的，就不放图片了。触摸屏质量不大好，点击需要有耐心。 把.gx文件存进U盘 U盘插入打印机（插口在右侧） 在打印机的屏幕上打开U盘 选择要打印的文件 打印 激光切割教学生成 DXF 图纸 选中零件，右键，导出为dxf 查看并保存。应该是二维图纸 填写材料加工申请单现场领取，正常填写即可。指导老师的填写合适即可，联系可以不写。","link":"/2024/03/20/3D%E6%89%93%E5%8D%B0%E5%92%8C%E6%BF%80%E5%85%89%E5%88%87%E5%89%B2%E6%95%99%E7%A8%8B/"},{"title":"HTML和CSS基础","text":"学习一些基本的前端知识 一些背景知识 HTML — Huper Text Markup Language 不是编程语言，不包含逻辑 首页HTML文件一般是index.html 页面语法与页面结构 基础语法 &lt;tagname>content&lt;/tagname> 页面结构 VScode里惊叹号+Tab补全自动生成 &lt;!DOCTYPE html> &lt;html lang=\"en\"> &lt;head> &lt;meta charset=\"UTF-8\"> &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> &lt;title>Document&lt;/title> &lt;/head> &lt;body> &lt;/body> &lt;/html> 各标签的使用示例&lt;!DOCTYPE html> &lt;!-- 指定文档类型为 HTML5 --> &lt;html lang=\"en\"> &lt;head> &lt;meta charset=\"UTF-8\"> &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> &lt;title>HTML 入门示例&lt;/title> &lt;!-- 页面标题 --> &lt;/head> &lt;body> &lt;!-- 页面主体内容 --> &lt;!-- 标题标签，从 h1 到 h6，字体大小依次减小 --> &lt;h1>这是一个 h1 标题&lt;/h1> &lt;h2>这是一个 h2 标题&lt;/h2> &lt;h3>这是一个 h3 标题&lt;/h3> &lt;h4>这是一个 h4 标题&lt;/h4> &lt;h5>这是一个 h5 标题&lt;/h5> &lt;h6>这是一个 h6 标题&lt;/h6> &lt;!-- 段落标签 --> &lt;p>这是一个段落，它包含了一些文本内容。Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatibus laudantium a id nihil accusantium doloremque perspiciatis? Modi asperiores quos, voluptatum provident a error ducimus nobis, neque, iste nisi reprehenderit consequuntur?&lt;/p> &lt;!-- 强调文本 --> &lt;p>&lt;strong>这段文本被加粗显示。&lt;/strong>&lt;/p> &lt;p>&lt;em>这段文本以斜体显示。&lt;/em>&lt;/p> &lt;!-- 水平线 --> &lt;hr> &lt;!-- 链接标签 --> &lt;a href=\"https://www.baidu.com\" target=\"_blank\">访问百度&lt;/a> &lt;!-- 图片标签 --> &lt;img src=\"https://cdn.jsdelivr.net/gh/ShiHantian/image_host@main/blog/index-2024-01-08-02-00-01.jpg\" alt=\"示例图片\" width=\"150\" height=\"150\"> &lt;!-- 无序列表 --> &lt;ul> &lt;li>列表项 1&lt;/li> &lt;li>列表项 2&lt;/li> &lt;li>列表项 3&lt;/li> &lt;/ul> &lt;!-- 有序列表 --> &lt;ol> &lt;li>第一项&lt;/li> &lt;li>第二项&lt;/li> &lt;li>第三项&lt;/li> &lt;/ol> &lt;!-- 表格 --> &lt;table border=\"1\"> &lt;thead> &lt;tr> &lt;th>姓名&lt;/th> &lt;th>邮箱&lt;/th> &lt;th>年龄&lt;/th> &lt;/tr> &lt;/thead> &lt;tbody> &lt;tr> &lt;td>张三&lt;/td> &lt;td>zhangsan@example.com&lt;/td> &lt;td>22&lt;/td> &lt;/tr> &lt;tr> &lt;td>李四&lt;/td> &lt;td>lisi@example.com&lt;/td> &lt;td>33&lt;/td> &lt;/tr> &lt;/tbody> &lt;/table> &lt;br> &lt;!-- 表单 --> &lt;form> &lt;label>姓名：&lt;/label> &lt;input type=\"text\" id=\"name\" name=\"name\"> &lt;br> &lt;br> &lt;label>邮箱：&lt;/label> &lt;input type=\"email\" id=\"email\" name=\"email\"> &lt;br> &lt;br> &lt;label>信息：&lt;/label> &lt;textarea>&lt;/textarea> &lt;br> &lt;br> &lt;label>性别：&lt;/label> &lt;select> &lt;option value=\"male\">男&lt;/option> &lt;option value=\"female\">女&lt;/option> &lt;/select> &lt;br> &lt;br> &lt;input type=\"submit\" value=\"提交\"> &lt;/form> &lt;br> &lt;!-- 按钮 --> &lt;button type=\"button\" onclick=\"alert('你点击了按钮！')\">点我&lt;/button> &lt;/body> &lt;/html> 效果：","link":"/2024/01/13/%5BCS%5DHTML%E5%92%8CCSS%E5%9F%BA%E7%A1%80/"},{"title":"使用VScode的PicGo插件搭建基于github的图床","text":"详细的搭建云图床教学 前言非众所周知，我是非常喜欢在笔记里面放截图的。之前我的markdown笔记里的图片都是放在和md文件相同的路径下，markdown代码像这样: 笔记图片添加方便、不影响笔记查看、图片文件都在本地倒也安心。但是当需要经常分享自己的markdown文件的时候，这样的粘贴图片方式就不方便了，要把文件夹压缩在发送，那也太不优雅了。 那就搭建一个自己的线上图床。查看我markdown文件的朋友们都可以通过图片链接访问我的线上图床看到我的图片。 本博客环境： 在VScode里编写markdown代码（也可以是Typora，Obsidian等） 使用PicGo插件（也可以是PicGo客户端）， 搭建基于github的图床（也可以是阿里云，七牛云等）。 建立github共有仓库作为图床 打开PicGo的插件设置 逐个解释： Current:填github Branch:填主分支即可，若主分支是master就填master Custom Url: https://cdn.jsdelivr.net/gh/用户名/仓库名@分支名 如 https://cdn.jsdelivr.net/gh/ShiHantian/image_host@main Path:是指在仓库里面的路径。我是新建了一个名为blog的文件夹专门放博客图片，于是填写 blog/ 注意要有斜杠才会放在这个文件夹里面 Repo: 用户名/仓库名 Token:进入链接https://github.com/settings/tokens获取。 我原来年限放的很长，但是要求我不得超过一年，于是改成 ‘2015/01/04’ 往下拉，Permissions可以很细地调，我们把Contents的许可改成Read and write即可。 复制Token。注意Token只会展示一次，可以粘贴到记事本上做一个暂时的保存，或直接粘贴到PicGo扩展的配置里。 我的设置为： &lt;p align=\"center\"> &lt;img src=\"${url}\" alt=\"${uploadedName}\" width=70%\" /> &lt;/p> 其中使用了 ${url} ${uploadedName} 这样的动态占位，还有别的动态占位可以选择。我使用的是markdown兼容的html语法来表示图片，这样可以对图片的宽度位置等有一个更好的控制。也可以采用markdown最基本的图片语法，即： ![${uploadedName}](${url}) 我的设置为： ${mdFileName}-${dateTime}${extName} 即‘笔记文件名-日期时间-图片后缀名’，也可根据配置页面的选项进行diy 如何使用 当你正在VScode里快乐地编写markdown笔记代码 复制想添加的图片到剪贴板 将光标放在希望放置图片代码的位置 默认快捷键 Ctrl+Alt+U, 同时完成图片上传和代码输出 References PicGo官方文档","link":"/2024/01/06/%5BCS%5DPicGo%E5%9B%BE%E5%BA%8A%E9%85%8D%E7%BD%AE/"},{"title":"电池相关知识及机器人供电设计","text":"为参加黎明杯机械赛的选手们编写。不少参赛队员来询问供电相关的问题，或者说来咨询遇到的问题是由供电设计不佳引起的。因此制作本教学，帮助选手们更好地完成供电设计。 锂电池基础知识主要围绕主流的LiPo航模电池进行讲解。（即本次机械赛材料包里电池的类型） 基本参数 电池容量。如：1300mAh。电芯数量相同的情况下，该参数越大，储存的电能越多。对于小车这样对于重量不敏感（相较于无人机等）的设备，这个参数基本是多多益善。当然较大的电池价格也会较高。 电芯数量。如：3S。航模电池是由多节电芯串联组成，几S就是几节电芯拼接，平衡电压就是单芯电压(3.7V for LiPo)的几倍。电芯数量决定了电池的电压范围。有的电池上会标总电压11.1V，等效于标注3S。 放电倍率。如：35c。标定了这块电池最大的放电电流，要和电池容量的参数结合起来看。理论上，1300mAh 35c的电池最大放电电流为1300mA $\\times$ 35=45.5A。然而，这个参数所有厂商都会虚标，因此实际电池最大承受的电流小于45.5A。即便如此，这样的放电能力对于本次机械赛的绝大部分小车来说是够用的。 误区纠正 电池电压并不是恒定的。标压锂电满电状态约4.2V，截止电压推荐3.6V，非常不建议低于3.3V。 关于过放。3.3V以下继续放电就是过放了，会对电池造成不可逆损伤，可能导致鼓包、起火等危险。这也是为什么我们给每队方法了低压检测器，当低于设定的截止电压听到报警时，应即使停止使用电池并充电。 关于电芯之间的电压平衡。如果正常使用我们提供的B3充电器进行充电，并使用XT60接头进行放电，则不会出现问题。但是有的队伍为了获得不一样的电压而从白色的平衡头取电，则会导致电芯之间的电压不平衡，从而严重影响电池性能。具体原理见航模电池平衡头接线原理图我们应该如何获得除了10.8V~12.6V以外的电压，会在后面讲到。 关于电压够不够。球球别怪电池电压不够了，检查一下电路吧。11V的电压对于小车上使用的各种电机和舵机来说都足够了，大部分队伍机器人无力的原因其实是电流带不动。大学生了不要再用欧姆定律简单地看待电路。请仔细检查电源到执行电机之间的电流通路，如果有杜邦线公母头相接不牢固、焊接处接触面积小、电流经过了过流能力差的模块等情况，尽量改善电路。 关于充电我们推荐B3充电器的原因，是价格实惠且使用简单，实惠到可以每队自己配一个，简单到即插即用不需要学习任何操作。诚然B6neo, toolkitRC M4，M6D等充电器是更专业更高效的选择，但是对于我们的使用周期而言并不合适。我们根据情况升级放在唐创的公用设备，但是数量有限。如果希望能更好把控本队调试进度的队伍建议购买自己的充电器。 供电设计关于电压我们的电源本身，即航模电池，能提供的只有11V左右的电压，那我们如何驱动电压需求不一样的电子元件呢？我们的材料包里提供了电源模块作为方案，电池插上去之后可以产生不同的输出电压。除了电源模块，我们还可以选择分电板、降压模块升压模块、专用驱动板等元件生成不同的电压。元件图片会附在下方，tb搜索购买。 注意。舵机电机步进电机等能接受的电压范围还是比较大的，但是Arduino板等“精细”些的电子元件接受的电压一定要注意，过高的电压会之间吧板子烧掉。另外，要防止高压和低压之间短路导致烧掉电路。 关于电流推荐模块 （使用分电板需学习焊接）","link":"/2024/04/15/%E7%94%B5%E6%B1%A0%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E5%8F%8A%E6%9C%BA%E5%99%A8%E4%BA%BA%E4%BE%9B%E7%94%B5%E8%AE%BE%E8%AE%A1/"},{"title":"ELRS固件刷写","text":"ELRS的接收机和发射机都需要刷写好固件，并且固件大版本号匹配才能对频配对。本博客以ELRS 2.4G 接收机刷写为例，介绍一种成功率较高的刷写方式。 官方仓库下载源码（简单且靠谱且新） 使用ELRS配置器本地编译固件（软件下载容易本地编译稳定） 通过wifi连接，使用网页端上传和烧录固件（不会因为端口问题出现各种bug） 下载固件源码 进入ExpressLRS仓库 克隆仓库或直接下载zip，zip需解压备用 编译固件安装 ExpressLRS configurator官网安装教程 安装完成并打开软件 选择本地 先选设备分类后选设备。若不清楚应咨询硬件购买店铺的客服 设备选项基本可以默认。 监管区域不要选欧洲的限制会多。 对频短语设置建议勾选并自己设置（发射机需要设置相同的对频密码），这样就不需要使用插拔断电三次这种不优雅的方式进行对频了 AUTO_WIFI_ON_INTERVAL的值可以自己调，这里填60就是插电后60秒内未对频将进入wifi模式 编译中，这一步时间较久，我这边用了2分钟 自动弹出网页页面。 这里选择文件选择刚才编译出的bin文件,点击Update 显示烧录成功。官方说要等待到LED blinking, 我也不清楚这里的blinking是快闪还是慢闪。Anyway，等一小会看到led闪烁模式发生变化，就好了。","link":"/2024/01/18/%5BFPV%5D%E9%80%9A%E8%BF%87wifi%E5%88%B7%E5%86%99elrs%E5%9B%BA%E4%BB%B6/"}],"tags":[{"name":"FPV","slug":"FPV","link":"/tags/FPV/"},{"name":"穿越机","slug":"穿越机","link":"/tags/%E7%A9%BF%E8%B6%8A%E6%9C%BA/"},{"name":"航模","slug":"航模","link":"/tags/%E8%88%AA%E6%A8%A1/"},{"name":"资源","slug":"资源","link":"/tags/%E8%B5%84%E6%BA%90/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"教程","slug":"教程","link":"/tags/%E6%95%99%E7%A8%8B/"},{"name":"笔记","slug":"笔记","link":"/tags/%E7%AC%94%E8%AE%B0/"},{"name":"Web","slug":"Web","link":"/tags/Web/"},{"name":"ROS","slug":"ROS","link":"/tags/ROS/"},{"name":"机器人","slug":"机器人","link":"/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"},{"name":"操作系统","slug":"操作系统","link":"/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"自动驾驶","slug":"自动驾驶","link":"/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"},{"name":"Clash","slug":"Clash","link":"/tags/Clash/"},{"name":"科学上网","slug":"科学上网","link":"/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"},{"name":"魔法","slug":"魔法","link":"/tags/%E9%AD%94%E6%B3%95/"},{"name":"代理","slug":"代理","link":"/tags/%E4%BB%A3%E7%90%86/"},{"name":"爬虫","slug":"爬虫","link":"/tags/%E7%88%AC%E8%99%AB/"},{"name":"Shell","slug":"Shell","link":"/tags/Shell/"},{"name":"遥控器","slug":"遥控器","link":"/tags/%E9%81%A5%E6%8E%A7%E5%99%A8/"},{"name":"AIGC","slug":"AIGC","link":"/tags/AIGC/"},{"name":"AI","slug":"AI","link":"/tags/AI/"},{"name":"机械加工","slug":"机械加工","link":"/tags/%E6%9C%BA%E6%A2%B0%E5%8A%A0%E5%B7%A5/"},{"name":"零基础","slug":"零基础","link":"/tags/%E9%9B%B6%E5%9F%BA%E7%A1%80/"},{"name":"HTML","slug":"HTML","link":"/tags/HTML/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"前端","slug":"前端","link":"/tags/%E5%89%8D%E7%AB%AF/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"VScode","slug":"VScode","link":"/tags/VScode/"},{"name":"PicGo","slug":"PicGo","link":"/tags/PicGo/"},{"name":"github","slug":"github","link":"/tags/github/"},{"name":"电路设计","slug":"电路设计","link":"/tags/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1/"},{"name":"开源软件","slug":"开源软件","link":"/tags/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/"},{"name":"固件","slug":"固件","link":"/tags/%E5%9B%BA%E4%BB%B6/"},{"name":"ELRS","slug":"ELRS","link":"/tags/ELRS/"}],"categories":[{"name":"笔记","slug":"笔记","link":"/categories/%E7%AC%94%E8%AE%B0/"},{"name":"教程","slug":"教程","link":"/categories/%E6%95%99%E7%A8%8B/"},{"name":"FPV","slug":"笔记/FPV","link":"/categories/%E7%AC%94%E8%AE%B0/FPV/"},{"name":"ROS","slug":"笔记/ROS","link":"/categories/%E7%AC%94%E8%AE%B0/ROS/"},{"name":"Crawler","slug":"笔记/Crawler","link":"/categories/%E7%AC%94%E8%AE%B0/Crawler/"},{"name":"CS","slug":"笔记/CS","link":"/categories/%E7%AC%94%E8%AE%B0/CS/"},{"name":"Web","slug":"教程/Web","link":"/categories/%E6%95%99%E7%A8%8B/Web/"},{"name":"Tips","slug":"教程/Tips","link":"/categories/%E6%95%99%E7%A8%8B/Tips/"},{"name":"AIGC","slug":"教程/AIGC","link":"/categories/%E6%95%99%E7%A8%8B/AIGC/"},{"name":"Web","slug":"笔记/Web","link":"/categories/%E7%AC%94%E8%AE%B0/Web/"},{"name":"CS","slug":"教程/CS","link":"/categories/%E6%95%99%E7%A8%8B/CS/"},{"name":"电路","slug":"教程/电路","link":"/categories/%E6%95%99%E7%A8%8B/%E7%94%B5%E8%B7%AF/"},{"name":"教程","slug":"笔记/教程","link":"/categories/%E7%AC%94%E8%AE%B0/%E6%95%99%E7%A8%8B/"}],"pages":[{"title":"tags","text":"","link":"/tags/index.html"}]}